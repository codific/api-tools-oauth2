<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.7.3@38c452ae584467e939d55377aaf83b5a26f19dd1">
  <file src="bin/bcrypt.php">
    <UnresolvableInclude occurrences="1">
      <code>include $autoload</code>
    </UnresolvableInclude>
  </file>
  <file src="src/Adapter/MongoAdapter.php">
    <DocblockTypeContradiction occurrences="1">
      <code>null === $this-&gt;bcrypt</code>
    </DocblockTypeContradiction>
    <InvalidArrayOffset occurrences="1">
      <code>$user['password']</code>
    </InvalidArrayOffset>
    <MissingReturnType occurrences="1">
      <code>createBcryptHash</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$result['client_secret']</code>
      <code>$user['password']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$result['client_secret']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>findOne</code>
      <code>insert</code>
      <code>insert</code>
      <code>update</code>
      <code>update</code>
    </MixedMethodCall>
    <ParamNameMismatch occurrences="8">
      <code>$clientId</code>
      <code>$clientId</code>
      <code>$clientSecret</code>
      <code>$clientSecret</code>
      <code>$grantTypes</code>
      <code>$redirectUri</code>
      <code>$scopeOrUserId</code>
      <code>$userId</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="1">
      <code>$clientSecret</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$bcrypt</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $value</code>
    </RedundantCastGivenDocblockType>
    <UndefinedDocblockClass occurrences="1">
      <code>MongoDB|array&lt;string, string|int&gt;</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Adapter/PdoAdapter.php">
    <DocblockTypeContradiction occurrences="1">
      <code>null === $this-&gt;bcrypt</code>
    </DocblockTypeContradiction>
    <ImplementedParamTypeMismatch occurrences="2">
      <code>$grantTypes</code>
      <code>$user</code>
    </ImplementedParamTypeMismatch>
    <InvalidArrayOffset occurrences="1">
      <code>$user['password']</code>
    </InvalidArrayOffset>
    <MissingReturnType occurrences="1">
      <code>createBcryptHash</code>
    </MissingReturnType>
    <MixedArgument occurrences="8">
      <code>$config['bcrypt_cost']</code>
      <code>$result['client_secret']</code>
      <code>$this-&gt;config['client_table']</code>
      <code>$this-&gt;config['client_table']</code>
      <code>$this-&gt;config['client_table']</code>
      <code>$this-&gt;config['user_table']</code>
      <code>$this-&gt;config['user_table']</code>
      <code>$user['password']</code>
    </MixedArgument>
    <ParamNameMismatch occurrences="8">
      <code>$clientId</code>
      <code>$clientId</code>
      <code>$clientSecret</code>
      <code>$clientSecret</code>
      <code>$grantTypes</code>
      <code>$redirectUri</code>
      <code>$scopeOrUserId</code>
      <code>$userId</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="1">
      <code>$clientSecret</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$bcrypt</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $value</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Controller/AuthController.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="1">
      <code>is_object($serverFactory)</code>
    </DocblockTypeContradiction>
    <InvalidCatch occurrences="1"/>
    <InvalidScalarArgument occurrences="1">
      <code>$status</code>
    </InvalidScalarArgument>
    <LessSpecificReturnStatement occurrences="7">
      <code>$httpResponse</code>
      <code>$this-&gt;getErrorResponse($response)</code>
      <code>$this-&gt;getErrorResponse($response)</code>
      <code>$this-&gt;getErrorResponse($response)</code>
      <code>$this-&gt;getErrorResponse($response)</code>
      <code>$this-&gt;getResponse()</code>
      <code>$this-&gt;getResponse()</code>
    </LessSpecificReturnStatement>
    <MismatchingDocblockReturnType occurrences="1">
      <code>ResponseInterface</code>
    </MismatchingDocblockReturnType>
    <MissingReturnType occurrences="1">
      <code>setApiProblemErrorResponse</code>
    </MissingReturnType>
    <MixedArgument occurrences="13">
      <code>$bodyParams</code>
      <code>$error</code>
      <code>$errorDescription</code>
      <code>$errorUri</code>
      <code>$headers</code>
      <code>$laminasRequest-&gt;getContent()</code>
      <code>$laminasRequest-&gt;getQuery()-&gt;toArray()</code>
      <code>$redirect</code>
      <code>$server</code>
      <code>$serverFactory</code>
      <code>$this-&gt;params('oauth')</code>
      <code>$this-&gt;params('oauth')</code>
      <code>$this-&gt;params('oauth')</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$server['PHP_AUTH_PW']</code>
      <code>$server['PHP_AUTH_USER']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$headers['PHP_AUTH_PW']</code>
      <code>$headers['PHP_AUTH_USER']</code>
      <code>$server['REQUEST_METHOD']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="16">
      <code>$authorized</code>
      <code>$bodyParams</code>
      <code>$clientId</code>
      <code>$code</code>
      <code>$contentType</code>
      <code>$error</code>
      <code>$errorDescription</code>
      <code>$errorUri</code>
      <code>$headers</code>
      <code>$headers</code>
      <code>$headers</code>
      <code>$headers['PHP_AUTH_PW']</code>
      <code>$headers['PHP_AUTH_USER']</code>
      <code>$redirect</code>
      <code>$server</code>
      <code>$server['REQUEST_METHOD']</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>ResponseInterface</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="9">
      <code>addHeaderLine</code>
      <code>addHeaders</code>
      <code>fromQuery</code>
      <code>get</code>
      <code>getFieldValue</code>
      <code>has</code>
      <code>toArray</code>
      <code>toArray</code>
      <code>toArray</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="4">
      <code>?Response</code>
      <code>?Response</code>
      <code>Response</code>
      <code>Response|ViewModel</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidCast occurrences="3">
      <code>$this-&gt;params('oauth')</code>
      <code>$this-&gt;params('oauth')</code>
      <code>$this-&gt;params('oauth')</code>
    </PossiblyInvalidCast>
    <PossiblyNullArgument occurrences="1">
      <code>$errorDescription</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedMethod occurrences="1">
      <code>isClientError</code>
    </PossiblyUndefinedMethod>
    <PropertyNotSetInConstructor occurrences="6">
      <code>$server</code>
      <code>AuthController</code>
      <code>AuthController</code>
      <code>AuthController</code>
      <code>AuthController</code>
      <code>AuthController</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $apiProblemErrorResponse</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$this-&gt;server instanceof OAuth2Server</code>
      <code>gettype($serverFactory)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedDocblockClass occurrences="1">
      <code>$response-&gt;isClientError()</code>
    </UndefinedDocblockClass>
    <UndefinedInterfaceMethod occurrences="6">
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getMethod</code>
      <code>getQuery</code>
      <code>isClientError</code>
      <code>setStatusCode</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="1">
      <code>bodyParams</code>
    </UndefinedMagicMethod>
    <UnusedVariable occurrences="3">
      <code>$contentType</code>
      <code>$contentType</code>
      <code>$server</code>
    </UnusedVariable>
  </file>
  <file src="src/Factory/AuthControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>AuthControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="2">
      <code>$container-&gt;get(UserId::class)</code>
      <code>UserId::class</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['api-tools-oauth2']['api_problem_error_response']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>callable</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$oauth2ServerFactory</code>
    </MixedReturnStatement>
    <ParamNameMismatch occurrences="1">
      <code>$controllers</code>
    </ParamNameMismatch>
    <UndefinedClass occurrences="1">
      <code>UserId</code>
    </UndefinedClass>
  </file>
  <file src="src/Factory/MongoAdapterFactory.php">
    <InvalidArgument occurrences="1">
      <code>$this-&gt;getMongoDb($container, $config)</code>
    </InvalidArgument>
    <MixedArgument occurrences="3">
      <code>$config</code>
      <code>$config</code>
      <code>$dbLocatorName</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="4">
      <code>$config['api-tools-oauth2']['mongo']</code>
      <code>$config['api-tools-oauth2']['mongo']['dsn']</code>
      <code>$config['api-tools-oauth2']['mongo']['options']</code>
      <code>$config['api-tools-oauth2']['storage_settings']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$options['connect']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="5">
      <code>$config</code>
      <code>$dbLocatorName</code>
      <code>$mongo</code>
      <code>$options</code>
      <code>$server</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>MongoDB</code>
    </MixedInferredReturnType>
    <MixedPropertyFetch occurrences="1">
      <code>$mongo-&gt;{$config['api-tools-oauth2']['mongo']['database']}</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="2">
      <code>$container-&gt;get($dbLocatorName)</code>
      <code>$mongo-&gt;{$config['api-tools-oauth2']['mongo']['database']}</code>
    </MixedReturnStatement>
    <UndefinedClass occurrences="1">
      <code>MongoClient</code>
    </UndefinedClass>
    <UndefinedDocblockClass occurrences="1">
      <code>MongoDB</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Factory/OAuth2ServerFactory.php">
    <MixedArgument occurrences="1">
      <code>$config</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['api-tools-oauth2']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$config</code>
    </MixedAssignment>
  </file>
  <file src="src/Factory/OAuth2ServerInstanceFactory.php">
    <ArgumentTypeCoercion occurrences="5">
      <code>$server-&gt;getStorage('authorization_code')</code>
      <code>$server-&gt;getStorage('client_credentials')</code>
      <code>$server-&gt;getStorage('jwt_bearer')</code>
      <code>$server-&gt;getStorage('refresh_token')</code>
      <code>$server-&gt;getStorage('user_credentials')</code>
    </ArgumentTypeCoercion>
    <MixedArgument occurrences="3">
      <code>$audience</code>
      <code>$options</code>
      <code>$storagesService</code>
    </MixedArgument>
    <MixedAssignment occurrences="11">
      <code>$accessLifetime</code>
      <code>$allowImplicit</code>
      <code>$audience</code>
      <code>$availableGrantTypes</code>
      <code>$clientOptions['allow_credentials_in_request_body']</code>
      <code>$enforceState</code>
      <code>$options</code>
      <code>$refreshOptions['always_issue_new_refresh_token']</code>
      <code>$refreshOptions['unset_refresh_token_after_use']</code>
      <code>$storage[$storageKey]</code>
      <code>$storagesService</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="5">
      <code>$server-&gt;getStorage('authorization_code')</code>
      <code>$server-&gt;getStorage('client_credentials')</code>
      <code>$server-&gt;getStorage('jwt_bearer')</code>
      <code>$server-&gt;getStorage('refresh_token')</code>
      <code>$server-&gt;getStorage('user_credentials')</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$server</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="1">
      <code>$services</code>
    </PropertyTypeCoercion>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;server</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Factory/PdoAdapterFactory.php">
    <InvalidArgument occurrences="1"/>
    <InvalidCast occurrences="1"/>
    <MixedArrayAccess occurrences="5">
      <code>$config['api-tools-oauth2']</code>
      <code>$oauthConfig['db']</code>
      <code>$oauthConfig['db']</code>
      <code>$oauthConfig['db']</code>
      <code>$oauthConfig['db']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="5">
      <code>$config</code>
      <code>$oauthConfig</code>
      <code>$options</code>
      <code>$password</code>
      <code>$username</code>
    </MixedAssignment>
  </file>
  <file src="src/Module.php">
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>include __DIR__ . '/../config/module.config.php'</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Provider/UserId/AuthenticationService.php">
    <DocblockTypeContradiction occurrences="1">
      <code>null === $this-&gt;authenticationService</code>
    </DocblockTypeContradiction>
    <MixedAssignment occurrences="2">
      <code>$identity</code>
      <code>$this-&gt;userId</code>
    </MixedAssignment>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$service</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Provider/UserId/AuthenticationServiceFactory.php">
    <MixedArgument occurrences="3">
      <code>$config</code>
      <code>$config</code>
      <code>$container-&gt;get(\Laminas\Authentication\AuthenticationService::class)</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
  </file>
  <file src="test/Adapter/Pdo/AbstractBaseTest.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>[[$pdo]]</code>
    </LessSpecificReturnStatement>
    <MixedArgument occurrences="1">
      <code>$pdo</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$db</code>
      <code>$pdo</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>exec</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1">
      <code>array&lt;array-key, array{0: PdoAdapter}&gt;</code>
    </MoreSpecificReturnType>
    <UndefinedInterfaceMethod occurrences="1">
      <code>setAllowOverride</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Adapter/Pdo/AccessTokenTest.php">
    <MissingReturnType occurrences="1">
      <code>testSetAccessToken</code>
    </MissingReturnType>
    <UndefinedClass occurrences="1">
      <code>NullStorage</code>
    </UndefinedClass>
  </file>
  <file src="test/Adapter/Pdo/AuthorizationCodeTest.php">
    <MissingReturnType occurrences="3">
      <code>testExpireAccessToken</code>
      <code>testGetAuthorizationCode</code>
      <code>testSetAuthorizationCode</code>
    </MissingReturnType>
    <UndefinedClass occurrences="3">
      <code>NullStorage</code>
      <code>NullStorage</code>
      <code>NullStorage</code>
    </UndefinedClass>
  </file>
  <file src="test/Adapter/Pdo/ClientCredentialsTest.php">
    <MissingReturnType occurrences="1">
      <code>testCheckClientCredentials</code>
    </MissingReturnType>
    <UndefinedClass occurrences="1">
      <code>NullStorage</code>
    </UndefinedClass>
  </file>
  <file src="test/Adapter/Pdo/ClientTest.php">
    <MissingReturnType occurrences="6">
      <code>testCheckRestrictedGrantType</code>
      <code>testGetAccessToken</code>
      <code>testGetClientDetails</code>
      <code>testGetClientScope</code>
      <code>testIsPublicClient</code>
      <code>testSaveClient</code>
    </MissingReturnType>
    <UndefinedClass occurrences="4">
      <code>NullStorage</code>
      <code>NullStorage</code>
      <code>NullStorage</code>
      <code>NullStorage</code>
    </UndefinedClass>
    <UndefinedInterfaceMethod occurrences="2">
      <code>isPublicClient</code>
      <code>isPublicClient</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Adapter/Pdo/JwtAccessTokenTest.php">
    <MissingReturnType occurrences="1">
      <code>testJwtWithJti</code>
    </MissingReturnType>
    <MixedMethodCall occurrences="3">
      <code>getJti</code>
      <code>getJti</code>
      <code>setJti</code>
    </MixedMethodCall>
  </file>
  <file src="test/Adapter/Pdo/JwtBearerTest.php">
    <MissingReturnType occurrences="1">
      <code>testGetClientKey</code>
    </MissingReturnType>
    <UndefinedClass occurrences="1">
      <code>NullStorage</code>
    </UndefinedClass>
  </file>
  <file src="test/Adapter/Pdo/PublicKeyTest.php">
    <MissingReturnType occurrences="1">
      <code>testSetAccessToken</code>
    </MissingReturnType>
    <MixedMethodCall occurrences="9">
      <code>getEncryptionAlgorithm</code>
      <code>getEncryptionAlgorithm</code>
      <code>getEncryptionAlgorithm</code>
      <code>getPrivateKey</code>
      <code>getPrivateKey</code>
      <code>getPrivateKey</code>
      <code>getPublicKey</code>
      <code>getPublicKey</code>
      <code>getPublicKey</code>
    </MixedMethodCall>
  </file>
  <file src="test/Adapter/Pdo/RefreshTokenTest.php">
    <MissingReturnType occurrences="1">
      <code>testSetRefreshToken</code>
    </MissingReturnType>
    <UndefinedClass occurrences="1">
      <code>NullStorage</code>
    </UndefinedClass>
  </file>
  <file src="test/Adapter/Pdo/ScopeTest.php">
    <MissingReturnType occurrences="2">
      <code>testGetDefaultScope</code>
      <code>testScopeExists</code>
    </MissingReturnType>
    <UndefinedClass occurrences="2">
      <code>NullStorage</code>
      <code>NullStorage</code>
    </UndefinedClass>
  </file>
  <file src="test/Adapter/Pdo/UserCredentialsTest.php">
    <MissingReturnType occurrences="2">
      <code>testCheckUserCredentials</code>
      <code>testUserClaims</code>
    </MissingReturnType>
    <MixedAssignment occurrences="4">
      <code>$claims</code>
      <code>$claims</code>
      <code>$claims</code>
      <code>$claims</code>
    </MixedAssignment>
    <UndefinedClass occurrences="1">
      <code>NullStorage</code>
    </UndefinedClass>
    <UndefinedInterfaceMethod occurrences="6">
      <code>getUserClaims</code>
      <code>getUserClaims</code>
      <code>getUserClaims</code>
      <code>getUserClaims</code>
      <code>getUserClaims</code>
      <code>getUserClaims</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Controller/AuthControllerTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$request</code>
      <code>$request</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>getSqlStringForSqlObject</code>
    </DeprecatedMethod>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new Adapter(new PdoDriver($r-&gt;getValue($adapter)))</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;db</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>Adapter|PDO</code>
    </InvalidReturnType>
    <MissingClosureReturnType occurrences="2">
      <code>function () use ($oauth2Server) {</code>
      <code>function () use ($oauth2Server) {</code>
    </MissingClosureReturnType>
    <MissingReturnType occurrences="17">
      <code>setBodyParamsPlugin</code>
      <code>setIsOAuth2FormatResponse</code>
      <code>setRequest</code>
      <code>setupDb</code>
      <code>testAuthorizeCode</code>
      <code>testAuthorizeForm</code>
      <code>testAuthorizeParamErrorIsApiProblem</code>
      <code>testAuthorizeParamErrorIsOAuth2Format</code>
      <code>testImplicitClientAuth</code>
      <code>testResource</code>
      <code>testToken</code>
      <code>testTokenActionUses401CodeIfTokenExceptionCodeIsInvalidWhenCreatingApiProblem</code>
      <code>testTokenActionUsesCodeFromTokenExceptionIfPresentToCreateApiProblem</code>
      <code>testTokenErrorIsApiProblem</code>
      <code>testTokenErrorIsOAuth2Format</code>
      <code>testTokenRevoke</code>
      <code>testTokenRevokeWithoutTokenIsError</code>
    </MissingReturnType>
    <MixedArgument occurrences="18">
      <code>$adapter</code>
      <code>$adapter::QUERY_MODE_EXECUTE</code>
      <code>$location</code>
      <code>$location</code>
      <code>$pdo</code>
      <code>$r-&gt;getValue($adapter)</code>
      <code>$select</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="25">
      <code>$config['api-tools-oauth2']</code>
      <code>$config['api-tools-oauth2']</code>
      <code>$oauthConfig['allow_implicit']</code>
      <code>$post['access_token']</code>
      <code>$post['grant_type']</code>
      <code>$response['detail']</code>
      <code>$response['detail']</code>
      <code>$response['detail']</code>
      <code>$response['error']</code>
      <code>$response['error']</code>
      <code>$response['error_description']</code>
      <code>$response['error_description']</code>
      <code>$response['message']</code>
      <code>$response['message']</code>
      <code>$response['status']</code>
      <code>$response['status']</code>
      <code>$response['status']</code>
      <code>$response['success']</code>
      <code>$response['success']</code>
      <code>$response['title']</code>
      <code>$response['title']</code>
      <code>$response['title']</code>
      <code>$results[0]</code>
      <code>$server['PHP_AUTH_PW']</code>
      <code>$server['PHP_AUTH_USER']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$config['api-tools-oauth2']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="26">
      <code>$adapter</code>
      <code>$allowImplicit</code>
      <code>$config</code>
      <code>$config</code>
      <code>$db</code>
      <code>$headers</code>
      <code>$headers</code>
      <code>$headers</code>
      <code>$headers</code>
      <code>$headers</code>
      <code>$location</code>
      <code>$location</code>
      <code>$oauthConfig</code>
      <code>$pdo</code>
      <code>$post</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$results</code>
      <code>$select</code>
      <code>$server</code>
      <code>$token</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="49">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>exec</code>
      <code>from</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getUri</code>
      <code>getUri</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>where</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$token</code>
    </MixedOperand>
    <PossiblyInvalidArgument occurrences="2">
      <code>$adapter</code>
      <code>$response</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="1">
      <code>toArray</code>
    </PossiblyUndefinedMethod>
    <PossiblyUndefinedVariable occurrences="2">
      <code>$code</code>
      <code>$code</code>
    </PossiblyUndefinedVariable>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;db</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedDocblockClass occurrences="1">
      <code>Adatper|PDO</code>
    </UndefinedDocblockClass>
    <UndefinedInterfaceMethod occurrences="61">
      <code>bootstrap</code>
      <code>bootstrap</code>
      <code>bootstrap</code>
      <code>getConfig</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>isRedirect</code>
      <code>isRedirect</code>
      <code>setAllowOverride</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setPost</code>
      <code>setQuery</code>
      <code>setService</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Controller/AuthControllerWithCustomAdapterTest.php">
    <MissingReturnType occurrences="1">
      <code>testToken</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="3">
      <code>$response['detail']</code>
      <code>$response['status']</code>
      <code>$response['title']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$response</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getFieldValue</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="1">
      <code>getFieldValue</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Controller/AuthControllerWithLaminasAuthenticationServiceTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="2">
      <code>setupDb</code>
      <code>testAuthorizeCode</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$code</code>
      <code>$location</code>
      <code>$pdo</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$response['access_token']</code>
      <code>$row['user_id']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="6">
      <code>$authentication</code>
      <code>$db</code>
      <code>$location</code>
      <code>$pdo</code>
      <code>$row</code>
      <code>$this-&gt;db</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>AuthenticationService</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="11">
      <code>andReturn</code>
      <code>andReturn</code>
      <code>exec</code>
      <code>get</code>
      <code>getUri</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>setStorage</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="1">
      <code>$authentication</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($this-&gt;getResponse(), 1)</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedMethod occurrences="2">
      <code>once</code>
      <code>once</code>
    </PossiblyUndefinedMethod>
    <PossiblyUndefinedVariable occurrences="2">
      <code>$code</code>
      <code>$code</code>
    </PossiblyUndefinedVariable>
    <UndefinedInterfaceMethod occurrences="11">
      <code>bootstrap</code>
      <code>getHeaders</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>isRedirect</code>
      <code>setMethod</code>
      <code>setPost</code>
      <code>setQuery</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="2">
      <code>once</code>
      <code>once</code>
    </UndefinedMagicMethod>
  </file>
  <file src="test/Controller/AuthControllerWithMongoAdapterTest.php">
    <MissingReturnType occurrences="5">
      <code>testAuthorizeCode</code>
      <code>testAuthorizeErrorParam</code>
      <code>testImplicitClientAuth</code>
      <code>testResource</code>
      <code>testToken</code>
    </MissingReturnType>
    <MixedArgument occurrences="10">
      <code>$location</code>
      <code>$location</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$this-&gt;getResponse()-&gt;getContent()</code>
      <code>$token</code>
      <code>MongoClient::VERSION</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="13">
      <code>$config['api-tools-oauth2']</code>
      <code>$oauthConfig['allow_implicit']</code>
      <code>$post['access_token']</code>
      <code>$post['grant_type']</code>
      <code>$response['detail']</code>
      <code>$response['message']</code>
      <code>$response['message']</code>
      <code>$response['status']</code>
      <code>$response['success']</code>
      <code>$response['success']</code>
      <code>$response['title']</code>
      <code>$server['PHP_AUTH_PW']</code>
      <code>$server['PHP_AUTH_USER']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="13">
      <code>$allowImplicit</code>
      <code>$config</code>
      <code>$headers</code>
      <code>$location</code>
      <code>$location</code>
      <code>$oauthConfig</code>
      <code>$post</code>
      <code>$response</code>
      <code>$response</code>
      <code>$response</code>
      <code>$server</code>
      <code>$this-&gt;db</code>
      <code>$token</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="24">
      <code>addHeaderLine</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>getFieldValue</code>
      <code>getUri</code>
      <code>getUri</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$this-&gt;db-&gt;oauth_clients</code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument occurrences="1">
      <code>$response</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable occurrences="2">
      <code>$client</code>
      <code>$code</code>
    </PossiblyUndefinedVariable>
    <UndefinedClass occurrences="2">
      <code>MongoClient</code>
      <code>MongoDB</code>
    </UndefinedClass>
    <UndefinedDocblockClass occurrences="1">
      <code>MongoDB</code>
    </UndefinedDocblockClass>
    <UndefinedInterfaceMethod occurrences="31">
      <code>bootstrap</code>
      <code>bootstrap</code>
      <code>getConfig</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getPost</code>
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getQuery</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>getServer</code>
      <code>isRedirect</code>
      <code>isRedirect</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Controller/CustomAdapter.php">
    <MixedInferredReturnType occurrences="1">
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>parent::checkUserCredentials($username, $password)</code>
    </MixedReturnStatement>
    <ParamNameMismatch occurrences="1">
      <code>$clientId</code>
    </ParamNameMismatch>
  </file>
  <file src="test/Controller/TestAsset/CustomProblemDetailsException.php">
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;details</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>array</code>
    </InvalidReturnType>
    <MissingConstructor occurrences="2">
      <code>$title</code>
      <code>$type</code>
    </MissingConstructor>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;details</code>
    </NullableReturnStatement>
  </file>
  <file src="test/Factory/AuthControllerFactoryTest.php">
    <MissingClosureReturnType occurrences="1">
      <code>function () {</code>
    </MissingClosureReturnType>
    <MissingReturnType occurrences="1">
      <code>testControllerCreated</code>
    </MissingReturnType>
    <UnusedVariable occurrences="3">
      <code>$controller</code>
      <code>$controller</code>
      <code>$controllers</code>
    </UnusedVariable>
  </file>
  <file src="test/Factory/MongoAdapterFactoryTest.php">
    <MissingReturnType occurrences="4">
      <code>testCanPassAdapterConfigurationWhenCreatingInstance</code>
      <code>testExceptionThrownWhenMissingMongoCredentials</code>
      <code>testInstanceCreated</code>
      <code>testInstanceCreatedWithMongoDbInServiceLocator</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>MongoClient::VERSION</code>
      <code>MongoDB::class</code>
      <code>MongoDB::class</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['user_table']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
    <TooManyArguments occurrences="2">
      <code>getMockBuilder</code>
      <code>getMockBuilder</code>
    </TooManyArguments>
    <UndefinedClass occurrences="3">
      <code>MongoClient</code>
      <code>MongoDB</code>
      <code>MongoDB</code>
    </UndefinedClass>
    <UnusedVariable occurrences="1">
      <code>$services</code>
    </UnusedVariable>
  </file>
  <file src="test/Factory/OAuth2ServerFactoryTest.php">
    <MissingReturnType occurrences="7">
      <code>testExceptionThrownOnMissingStorageClass</code>
      <code>testServiceCreatedWithDefaults</code>
      <code>testServiceCreatedWithOverriddenValues</code>
      <code>testServiceCreatedWithOverriddenValuesInOptionsSubArray</code>
      <code>testServiceCreatedWithSelectedGrandTypes</code>
      <code>testServiceCreatedWithStoragesAsArray</code>
      <code>testSubsequentCallsReturnTheSameInstance</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>constant('HHVM_VERSION')</code>
    </MixedArgument>
    <TooManyArguments occurrences="1">
      <code>$smFactory</code>
    </TooManyArguments>
    <UnusedVariable occurrences="1">
      <code>$services</code>
    </UnusedVariable>
  </file>
  <file src="test/Factory/PdoAdapterFactoryTest.php">
    <MissingReturnType occurrences="4">
      <code>testAllowsPassingDbOptions</code>
      <code>testAllowsPassingOauth2ServerConfigAndPassesOnToUnderlyingAdapter</code>
      <code>testExceptionThrownWhenMissingDbCredentials</code>
      <code>testInstanceCreated</code>
    </MissingReturnType>
    <MixedArrayAccess occurrences="1">
      <code>$config['user_table']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
    <UnusedVariable occurrences="1">
      <code>$services</code>
    </UnusedVariable>
  </file>
</files>
